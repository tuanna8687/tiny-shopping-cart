@model IEnumerable<TinyShoppingCart.Presentation.Admin.ViewModels.ViewProductCategoryViewModel>


<div class="row">
    <div class="col-12">
        <input type="hidden" id="deleteUrl" value='@Url.Action("Delete", "ProductCategory")'>
        <input type="hidden" id="editUrl" value='@Url.Action("Update", "ProductCategory")'>

        <!-- Tree view-->
        <div id="divTree">
            @await Html.PartialAsync("_TreePartial", Model)
        </div>

        <!-- Context menu-->
        <div id='jqxMenu'>
            <ul>
                <li>Add Item</li>
                <li>Edit Item</li>
                <li>Remove Item</li>
            </ul>
        </div>

        

        <!-- Create popup-->
        <jqx-window id="creationWindow" autoOpen="false" width="50%" height="50%">
            <jqx-window-header>Create Category</jqx-window-header>
            <jqx-window-body>
                @await Html.PartialAsync("_CreatePartial", new EditProductCategoryViewModel())
            </jqx-window-body>
        </jqx-window>

        <!-- Update popup-->
        <jqx-window id="updateWindow" autoOpen="false" width="50%">
            <jqx-window-header>Update Category</jqx-window-header>
            <jqx-window-body>
            </jqx-window-body>
        </jqx-window>

    </div>
</div>

@section scripts
{
    @Html.Partial("_jQWidgetsTreeScriptsPartial")
    @Html.Partial("_ValidationScriptsPartial")
    @Html.Partial("_AjaxScriptsPartial")
    <script src="~/assets/js/product-categories.js"></script>

    <script>
        $(document).ready(function() {
            var contextMenu = $("#jqxMenu").jqxMenu({ width: '120px',  height: '84px', autoOpenPopup: false, mode: 'popup' });

            var attachContextMenu = function () {
                // open the context menu when the user presses the mouse right button.
                $("#tree li").on('mousedown', function (event) {
                    var target = $(event.target).parents('li:first')[0];
                    var rightClick = isRightClick(event);
                    if (rightClick && target != null) {
                        $("#tree").jqxTree('selectItem', target);
                        var scrollTop = $(window).scrollTop();
                        var scrollLeft = $(window).scrollLeft();
                        contextMenu.jqxMenu('open', parseInt(event.clientX) + 5 + scrollLeft, parseInt(event.clientY) + 5 + scrollTop);
                        return false;
                    }
                });
            }
            attachContextMenu();

            function isRightClick(event) {
                var rightclick;
                if (!event) var event = window.event;
                if (event.which) rightclick = (event.which == 3);
                else if (event.button) rightclick = (event.button == 2);
                return rightclick;
            }

            $("#jqxMenu").on('itemclick', function (event) {
                var item = $.trim($(event.args).text());
                switch (item) {
                    case "Add Item":
                        var selectedItem = $('#tree').jqxTree('selectedItem');
                        if (selectedItem != null) {
                            $("#ParentId").val(selectedItem.value);
                            $("#creationWindow").jqxWindow('open');
                        }
                        break;

                    case "Edit Item":
                        var selectedItem = $('#tree').jqxTree('selectedItem');
                        if (selectedItem != null) {
                            var editUrl = $("#editUrl").val();
                            $.ajax({
                                url: editUrl,
                                method: 'POST',
                                data: {
                                    id: selectedItem.value
                                }
                            }).then(function(data) {
                                debugger
                                $('#updateWindow').jqxWindow({ content: data });
                                var updateForm = $("#updateForm");
                                $.validator.unobtrusive.parse(updateForm);
                                registerSubmitEvenHandlerForUpdateForm(updateForm);
                                
                                $("#updateWindow").jqxWindow('open');
                            });
                            
                        }
                        break;

                    case "Remove Item":
                        var selectedItem = $('#tree').jqxTree('selectedItem');
                        if (selectedItem != null) {
                            var deleteUrl = $("#deleteUrl").val();
                            $.ajax({
                                url: deleteUrl,
                                method: 'POST',
                                data: {
                                    id: selectedItem.value
                                } 
                            }).done(function() {
                                $('#tree').jqxTree('removeItem', selectedItem.element);
                                attachContextMenu();
                            });
                        }
                        break;
                }
            });

            function registerSubmitEvenHandlerForUpdateForm(updateForm) {
                updateForm.data("validator").settings.submitHandler = function (form) { 
                    var formElement = $(form);
                    var updateUrl = $(form).attr("action");

                    $.ajax({
                        url: updateUrl,
                        method: 'POST',
                        data: $(form).serialize()
                    }).done(function(data) {
                        $("#updateWindow").jqxWindow('close');
                        $("#divTree").html(data);
                        attachContextMenu();
                    });

                    return false;
                };
            }

            // disable the default browser's context menu.
            $(document).on('contextmenu', function (e) {
                if ($(e.target).parents('.jqx-tree').length > 0) {
                    return false;
                }
                return true;
            });


            debugger
            $("#createForm").data("validator").settings.submitHandler = function (form) { 
                var formElement = $(form);
                var createUrl = $(form).attr("action");

                $.ajax({
                    url: createUrl,
                    method: 'POST',
                    data: $(form).serialize()
                }).done(function(data) {
                    $("#creationWindow").jqxWindow('close');
                    var selectedItem = $('#tree').jqxTree('selectedItem');
                    if (selectedItem != null) {
                        $('#tree').jqxTree('addTo', data, selectedItem.element);
                        attachContextMenu();
                    }
                });

                return false;
            };

        });
    </script>
}